# -*- coding: utf-8 -*-
"""Applied Data Science_Climate_Prasad.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1DnjcmIu3wlfbirLJic8lZxLZ4TIYoleD

**NAME - Prasad**
"""

pip install wbgapi

#Importing the packages
import pandas as pd
import wbgapi as wb
import seaborn as sns
import matplotlib.pyplot as plt

#Function for taking input
def inp (dataset):
  a=pd.read_csv(dataset)
  return a

#Pandas function extracting values from the dataset
indicators_df=inp("/content/Global_Indicators.csv")

#Initial rows of the dataset
indicators_df.head()

#Index setting as economy
indicators_df1=indicators_df.set_index('economy')

#Transpose format of the dataste
indicators_df1.T.head(10)

#Characteristics of economy and climate
cde_nat = ['BGD','IND','CHE','BGR','PAK','FRA','AUS','JPN']
ec_char = ['NY.GDP.MKTP.PP.CD','NE.DAB.TOTL.ZS','NE.IMP.GNFS.ZS','SL.UEM.1524.MA.NE.ZS']
cl_char=['EG.ELC.ACCS.RU.ZS','EG.ELC.RNWX.KH','EN.ATM.GHGT.KT.CE','EG.ELC.NGAS.ZS']
ECN_IND  = wb.data.DataFrame(ec_char, cde_nat, mrv=7)
CLM_IND = wb.data.DataFrame(cl_char, cde_nat, mrv=7)

#NY.GDP.MKTP.PP.CD: Country's current GDP, PPP
#NE.DAB.TOTL.ZS: Country's expenditure
#NE.IMP.GNFS.ZS: Country's import
#EG.ELC.RNWX.KH: Country's renewable sources energy production
#EN.ATM.GHGT.KT.CE: Country's greenshouse gas emissions
#EG.ELC.NGAS.ZS: Country's natural sources energy production
#SL.UEM.1524.MA.NE.ZS: Country's youth male unemployment
#EG.ELC.ACCS.RU.ZS: Country's rural electricity access

#Economy characteristics
ECN_IND.columns = [e.replace('YR','') for e in ECN_IND.columns]
ECN_IND=ECN_IND.stack().unstack(level=1)
ECN_IND.index.names = ['Country_Name', 'Year']
ECN_IND.columns
ECN_IND.fillna(0)
ECN_IND.head(9)

#Climate characteristics
CLM_IND.columns = [c.replace('YR','') for c in CLM_IND.columns]
CLM_IND=CLM_IND.stack().unstack(level=1)
CLM_IND.index.names = ['Country_Name', 'Year']
CLM_IND.columns
CLM_IND.fillna(0)
CLM_IND.head(9)

#economic and climatic characteristics
a=ECN_IND.reset_index()
b=CLM_IND.reset_index()
c=a.fillna(0)
d=b.fillna(0)

#Dataframe - Economic and climatic characteristics
dataset = pd.merge(c, d)
dataset.head(8)

# Bangladesh's statistical measures
c1=dataset[(dataset['Country_Name']=='BGD')]
c1.describe()

"""**The average total import for Bangladesh is 18.92. The average total electricity access in rural places in Bangladesh is 81.01%**"""

#Bangladesh's rural electricity access- Line plot
plt.plot(c1["Year"], c1["EG.ELC.ACCS.RU.ZS"],color="magenta")
plt.ylabel("EN.ATM.GHGT.KT.CE")
plt.xlabel("Year")
plt.show()

# India's statistical measures
c2=dataset[(dataset['Country_Name']=='IND')]
c2.describe()

"""**The average total expenditure of India is lower than Bangladesh. The average total electricity access in rural places in India is higher than Bangladesh**"""

#India's emission of greenhouse gas  - Line plot
plt.plot(c2["Year"], c2["EN.ATM.GHGT.KT.CE"],color="magenta")
plt.ylabel("EN.ATM.GHGT.KT.CE")
plt.xlabel("Year")
plt.show()

# Switzerland's statistical measures
c3=dataset[(dataset['Country_Name']=='CHE')]
c3.describe()

"""**The average total electricity production from renewable sources in Switzerland is lower than India but higher than Bangladesh. The average total imports in Switzerland is higher than India and Bangladesh**"""

#Switzerland's  youth male unemployment - Bar plot
c3.plot(x="Year", y="SL.UEM.1524.MA.NE.ZS", kind="bar",color="magenta")

# Bulgaria's statistical measures
c4=dataset[(dataset['Country_Name']=='BGR')]
c4.describe()

"""**The average electricity production from natural gas sources in Bulgaria is higher than Switzerland but lower than India. The average total expenditure in Bulgaira is higher than Switzerland but lower than India**"""

# Bulgaria's imports - Scatter plot
c4.plot(x="Year", y="NE.IMP.GNFS.ZS", kind="scatter",color="magenta")

# Pakistan's statistical measures
c5=dataset[(dataset['Country_Name']=='PAK')]
c5.describe()

"""**The average total import of Pakistan is lower than Bulgaria and Switzerland. The average greenhouse gas emission in Pakistan is higher than Bulgaria and Switzerland**"""

#Pakistan's rural electricity access - Scatter plot
c5.plot(x="Year", y="EG.ELC.ACCS.RU.ZS", kind="scatter",color="magenta")

# France's statistical measures
c6=dataset[(dataset['Country_Name']=='FRA')]
c6.describe()

"""**The average total expenditure in France is lower than Pakistan but higher than Bulgaria. The average production of energy from renewable sources in France is higher than Bulgaria and Pakistan**"""

#France's youth male unemployment- Bar plot
c6.plot(x="Year", y="SL.UEM.1524.MA.NE.ZS", kind="bar",color="magenta")

# Australia's statistical measures
c7=dataset[(dataset['Country_Name']=='AUS')]
c7.describe()

"""**The average current GDP in PPP of Australia is lower than France but higher than Pakistan. The average production of energy from natural sources in Australia is higher than France but lower than Pakistan.**"""

# Australia's current GDP, PPP - Scatter plot
c7.plot(x="Year", y="NY.GDP.MKTP.PP.CD", kind="scatter",color="magenta")

# Japan's statistical measures
c8=dataset[(dataset['Country_Name']=='JPN')]
c8.describe()

"""**The average total male youth unemployment in Japan is lower than France and Australia. The average greenhouse gas emission in Japan is higher than than France and Australia**"""

#Japan's emission of greenshouse gas- Bar plot
c8.plot(x="Year", y="EN.ATM.GHGT.KT.CE", kind="bar",color="magenta")

"""**CORRELATION ANALYSIS - PAKISTAN**"""

plt.plot(c5["EG.ELC.ACCS.RU.ZS"], c5["NY.GDP.MKTP.PP.CD"],color="magenta")
plt.ylabel("NY.GDP.MKTP.PP.CD")
plt.xlabel("EG.ELC.ACCS.RU.ZS")
plt.show()

plt.plot(c5["EN.ATM.GHGT.KT.CE"], c5["NY.GDP.MKTP.PP.CD"],color="magenta")
plt.ylabel("NY.GDP.MKTP.PP.CD")
plt.xlabel("EN.ATM.GHGT.KT.CE")
plt.show()

"""**CORRELATION ANALYSIS - BULGARIA**"""

plt.plot(c4["EG.ELC.ACCS.RU.ZS"], c4["NY.GDP.MKTP.PP.CD"],color="magenta")
plt.ylabel("NY.GDP.MKTP.PP.CD")
plt.xlabel("EG.ELC.ACCS.RU.ZS")
plt.show()

plt.plot(c4["NE.DAB.TOTL.ZS"], c4["NY.GDP.MKTP.PP.CD"],color="magenta")
plt.xlabel("NE.DAB.TOTL.ZS")
plt.ylabel("NY.GDP.MKTP.PP.CD")
plt.show()

"""**HEATMAP VISUALISATION**"""

#Heatmap visualisation -INDIA
import warnings
with warnings.catch_warnings(record=True):
    a1=dataset[((dataset['Country_Name']=='IND'))]
    figr,axes = plt.subplots(figsize=(6, 6))
    sns.heatmap(a1.corr(), annot = True, fmt= '.2f',cmap='viridis')
    plt.show()

